"use strict";(self.webpackChunkrafaelszp_github_io=self.webpackChunkrafaelszp_github_io||[]).push([[6776],{4727:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>t,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var a=o(4848),n=o(8453);const i={sidebar_label:"Code Pipeline - Vis\xe3o geral"},r="Code Pipeline - Vis\xe3o geral",d={id:"aws/DevOps/articles/Code Pipeline - Vis\xe3o geral",title:"Code Pipeline - Vis\xe3o geral",description:"Created17",source:"@site/docs/aws/DevOps/articles/Code Pipeline - Vis\xe3o geral.md",sourceDirName:"aws/DevOps/articles",slug:"/aws/DevOps/articles/Code Pipeline - Vis\xe3o geral",permalink:"/docs/aws/DevOps/articles/Code Pipeline - Vis\xe3o geral",draft:!1,unlisted:!1,editUrl:"https://github.com/rafaelszp/rafaelszp.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/aws/DevOps/articles/Code Pipeline - Vis\xe3o geral.md",tags:[],version:"current",frontMatter:{sidebar_label:"Code Pipeline - Vis\xe3o geral"},sidebar:"principal",previous:{title:"ECS Fargate Container Deployment",permalink:"/docs/aws/Computing/Articles/ECS Fargate Deployment"},next:{title:"Estudo de caso 1 - NAT Gateway",permalink:"/docs/aws/Networking/Case Studies/natgateway"}},t={},l=[{value:"Serve para qu\xea?",id:"serve-para-qu\xea",level:2},{value:"Quando s\xe3o iniciadas?",id:"quando-s\xe3o-iniciadas",level:2},{value:"Componentes de uma pipeline",id:"componentes-de-uma-pipeline",level:2},{value:"Stages",id:"stages",level:3},{value:"Transitions",id:"transitions",level:3},{value:"Executions",id:"executions",level:2},{value:"Pipeline Executions",id:"pipeline-executions",level:3},{value:"Stopped Executions",id:"stopped-executions",level:4},{value:"Failed Executions",id:"failed-executions",level:4},{value:"Execution modes",id:"execution-modes",level:4},{value:"Artifacts",id:"artifacts",level:3},{value:"Triggers",id:"triggers",level:2},{value:"Variables",id:"variables",level:2},{value:"Namespaces",id:"namespaces",level:3},{value:"Boas pr\xe1ticas e exemplo",id:"boas-pr\xe1ticas-e-exemplo",level:2},{value:"Vers\xf5es de pipeline",id:"vers\xf5es-de-pipeline",level:2},{value:"Como \xe9 a aprova\xe7\xe3o manual?",id:"como-\xe9-a-aprova\xe7\xe3o-manual",level:2},{value:"Monitoramento",id:"monitoramento",level:2},{value:"Event Bridge",id:"event-bridge",level:3},{value:"Mas o que s\xe3o Eventos?",id:"mas-o-que-s\xe3o-eventos",level:4},{value:"Detail type",id:"detail-type",level:3},{value:"Developer Tools",id:"developer-tools",level:3},{value:"Cloudtrail",id:"cloudtrail",level:3},{value:"References",id:"references",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"code-pipeline---vis\xe3o-geral",children:"Code Pipeline - Vis\xe3o geral"}),"\n",(0,a.jsx)(s.p,{children:"Created: 2024-07-03 08:17\r\nTags: #devops #codepipeline #aws"}),"\n",(0,a.jsx)(s.h2,{id:"serve-para-qu\xea",children:"Serve para qu\xea?"}),"\n",(0,a.jsx)(s.p,{children:"O servi\xe7o da AWS Code Pipeline serve para orquestrar as diferentes etapas de uma pipeline de CI/CD. Uma pipeline \xe9 o fluxo que descreve como devem ser processadas as mudan\xe7as de um determinado software."}),"\n",(0,a.jsx)(s.h2,{id:"quando-s\xe3o-iniciadas",children:"Quando s\xe3o iniciadas?"}),"\n",(0,a.jsxs)(s.p,{children:["As pipelines s\xe3o disparadas quando h\xe1 uma mudan\xe7a no codigo, declaradas como Source. Quando isto acontece \xe9 criada uma ",(0,a.jsx)(s.code,{children:"revision"})," que representa estas mudan\xe7as, para que sejam processadas pelas ",(0,a.jsx)(s.code,{children:"Executions"})]}),"\n",(0,a.jsx)(s.h2,{id:"componentes-de-uma-pipeline",children:"Componentes de uma pipeline"}),"\n",(0,a.jsx)(s.p,{children:"No Code Pipeline h\xe1 basicamente 3 componentes b\xe1sicos sendo:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"A Pipeline em si"}),"\n",(0,a.jsx)(s.li,{children:"Os Stages (est\xe1gios) para agrupar Actions que devem ser executadas em conjunto"}),"\n",(0,a.jsx)(s.li,{children:"Actions , que servem para definir como manipulamos os artefatos"}),"\n",(0,a.jsx)(s.li,{children:"Transitions, s\xe3o as liga\xe7\xf5es entre Stages, sempre ocorrendo de forma ascendente, ou seja, do est\xe1gio anterior para o seguinte"}),"\n",(0,a.jsx)(s.li,{children:"Artifacts, que s\xe3o os artefatos que s\xe3o manipulados pelas actions"}),"\n",(0,a.jsx)(s.li,{children:"Vari\xe1veis"}),"\n",(0,a.jsx)(s.li,{children:"Triggers"}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"stages",children:"Stages"}),"\n",(0,a.jsx)(s.p,{children:"Os Stages s\xe3o conjuntos de actions que fazem sentido serem executadas de forma agrupada. Para que uma Stage seja executada, deve existir uma transition habilitada, proveniente de um Stage anterior."}),"\n",(0,a.jsx)(s.h3,{id:"transitions",children:"Transitions"}),"\n",(0,a.jsxs)(s.p,{children:['As Transitions s\xe3o as transi\xe7\xf5es entre estagios, sempre de forma ascendente. Estas podem ser desabilitadas, de forma que o pr\xf3ximo Stage n\xe3o ser\xe1 executado enquanto n\xe3o houver um "TTL", de 30 dias, ou quando for reabilitada. Durante o per\xedodo em que uma derminada transition estiver desabilitada, as Executions que estiverem em espera s\xe3o chamadas de ',(0,a.jsx)(s.strong,{children:"Inbound Executions"}),"."]}),"\n",(0,a.jsx)(s.p,{children:"\xc9 importante ressaltar que se uma transition permanecer desabilita por mais de 30 dias, o processo de retomada de execu\xe7\xe3o \xe9 manual, de forma que a pipeline relacionada deve ser executada novamente.\r\n### Actions"}),"\n",(0,a.jsxs)(s.p,{children:["Actions s\xe3o as a\xe7\xf5es, ou opera\xe7\xf5es que ocorrem nos artefatos, que podem ser executadas tanto serialmente quanto paralalamente. Por exemplo, uma ",(0,a.jsx)(s.code,{children:"build action"})," pode acionar o servi\xe7o (provider) CodeBuild para que os artefatos de entrada (input) sejam utilizados como fonte da compila\xe7\xe3o (build), gerando um artefato de sa\xedda que ser\xe1 utilizada em uma pr\xf3xima Action, que pode estar dentro do mesmo Stage ou mesmo no subsequente."]}),"\n",(0,a.jsx)(s.p,{children:"As Actions podem ser dos seguintes tipos:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Source"}),"\n",(0,a.jsx)(s.li,{children:"Build"}),"\n",(0,a.jsx)(s.li,{children:"Test"}),"\n",(0,a.jsx)(s.li,{children:"Deploy"}),"\n",(0,a.jsx)(s.li,{children:"Approval"}),"\n",(0,a.jsx)(s.li,{children:"Invoke"}),"\n",(0,a.jsx)(s.li,{children:"Personalizadas pelo operador"}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"executions",children:"Executions"}),"\n",(0,a.jsx)(s.p,{children:"As Executions s\xe3o processos relacionados \xe0s opera\xe7\xf5es realizadas nos componentes das pipelines, assim temos:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Pipeline executions - corresponde a um conjunto de mudan\xe7as ocorridas na fonte (Source). Cada uma delas possui um identificador (ID). Suportam v\xe1rias execu\xe7\xf5es em paralelo"}),"\n",(0,a.jsx)(s.li,{children:"Stage operations - embora n\xe3o seja uma execution em si, mas classificada como operation, faz mais sentido tratar como uma execution. Estas correspondem aos processos de completar as execu\xe7\xf5es das Actions de um stage."}),"\n",(0,a.jsx)(s.li,{children:"Action executions - Referem se ao processo de completar as opera\xe7\xf5es que ocorrem dentro de um action."}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"Abaixo segue uma tabela com o Status relacionados \xe0s executions de uma pipeline:"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Nivel"}),(0,a.jsx)(s.th,{children:"Estados"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Pipeline execution"}),(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.code,{children:"InProgress"}),",\xa0",(0,a.jsx)(s.code,{children:"Stopping"}),",\xa0",(0,a.jsx)(s.code,{children:"Stopped"}),",\xa0",(0,a.jsx)(s.code,{children:"Succeeded"}),",\xa0",(0,a.jsx)(s.code,{children:"Superseded"}),", e\xa0",(0,a.jsx)(s.code,{children:"Failed"}),"."]})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Stage operations"}),(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.code,{children:"InProgress"}),",\xa0",(0,a.jsx)(s.code,{children:"Stopping"}),",\xa0",(0,a.jsx)(s.code,{children:"Stopped"}),",\xa0",(0,a.jsx)(s.code,{children:"Succeeded"}),", e\xa0",(0,a.jsx)(s.code,{children:"Failed"})]})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Action executions"}),(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.code,{children:"InProgress"}),",\xa0",(0,a.jsx)(s.code,{children:"Abandoned"}),",\xa0",(0,a.jsx)(s.code,{children:"Succeeded"}),", e\xa0",(0,a.jsx)(s.code,{children:"Failed"})]})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{}),(0,a.jsx)(s.td,{})]})]})]}),"\n",(0,a.jsx)(s.p,{children:"Para os n\xedveis de Pipeline e de Stage, temos 2 tipos de executions, a saber:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Standard"}),"\n",(0,a.jsx)(s.li,{children:"Rolled back"}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"pipeline-executions",children:"Pipeline Executions"}),"\n",(0,a.jsxs)(s.p,{children:["S\xe3o opera\xe7\xf5es que ocorrem em resposta \xe0s mudan\xe7as em um Source. Estas podem ser executadas paralelamente ou n\xe3o. Quando uma Execution est\xe1 esperando uma transition ser habilidada pra executar um pr\xf3ximo Stage \xe9 chamada de ",(0,a.jsx)(s.code,{children:"Inbound Execution"})]}),"\n",(0,a.jsx)(s.h4,{id:"stopped-executions",children:"Stopped Executions"}),"\n",(0,a.jsx)(s.p,{children:'As executions podem ser paradas manualmente, a qualquer momento durante a execu\xe7\xe3o de uma pipeline. Quando o processo de "parada" \xe9 executado, pode ser dos seguintes tipos:'}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Stop and wait"})," - As actions que estiverem em execu\xe7\xe3o n\xe3o ser\xe3o terminadas, de modo que a pipeline transita entre os estados de ",(0,a.jsx)(s.code,{children:"Stopping"})," para ",(0,a.jsx)(s.code,{children:"Stopped"}),". O processo de retry (tentar novamente) \xe9 poss\xedvel"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Stop and Abandon"}),' - As actions em execu\xe7\xe3o ser\xe3o "abandonadas", ou seja, terminadas, de modo que a pipeline transita entre os estados de ',(0,a.jsx)(s.code,{children:"Abandoned"})," para ",(0,a.jsx)(s.code,{children:"Stopped"}),".O processo de retry (tentar novamente) \xe9 poss\xedvel"]}),"\n"]}),"\n",(0,a.jsx)(s.h4,{id:"failed-executions",children:"Failed Executions"}),"\n",(0,a.jsxs)(s.p,{children:["Quando uma execution n\xe3o completa devido a algum problema o estado \xe9 alterado para ",(0,a.jsx)(s.code,{children:"Failed"}),", de modo que o processo de rollback \xe9 poss\xedvel."]}),"\n",(0,a.jsx)(s.h4,{id:"execution-modes",children:"Execution modes"}),"\n",(0,a.jsx)(s.p,{children:"As executions tem 3 modos de opera\xe7\xe3o, a saber:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"SUPERSEDED"}),", neste modo as executions ser\xe3o substitu\xeddas pelas posteriores. Esse processo ocorrer\xe1 durante as transitions, de forma que os stages em execu\xe7\xe3o n\xe3o ser\xe3o interrompidos, por\xe9m os susbsequentes ter\xe3o execu\xe7\xf5es substitu\xeddas pelas mais recentes. Este \xe9 modo padr\xe3o das pipelines, ressaltando que haver\xe1 somente uma requisi\xe7\xe3o por stage ao mesmo tempo."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"QUEUED"}),", neste modo, dispon\xedvel somente na vers\xe3o 2 (V2) das pipelines, as execu\xe7\xf5es ser\xe3o enfileiradas na ordem de cria\xe7\xe3o."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"PARALLEL"}),", neste modo, dispon\xedvel somente na vers\xe3o 2 (V2) das pipelines, n\xe3o h\xe1 espera, pois as executions operam em paralelo, sem interferirem entre si. Este modo \xe9 recomendado, por exemplo, para m\xfaltiplos ambientes de desenvolvimento em que \xe9 preciso testar v\xe1rias altera\xe7\xf5es em paralelo."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"artifacts",children:"Artifacts"}),"\n",(0,a.jsxs)(s.p,{children:["S\xe3o os arquivos que s\xe3o manipulados pelas Actions, sendo que podem ser ",(0,a.jsx)(s.code,{children:"input"})," ou ",(0,a.jsx)(s.code,{children:"output"})," artifacts, definidos na etapa de cria\xe7\xe3o da action. Durante a transi\xe7\xe3o de artifacts entre actions o Code Pipeline precisa utilizar um bucket do ",(0,a.jsx)(s.code,{children:"Amazon S3"})," para esta opera\xe7\xe3o, isto implica custos de acesso e armazenamento do servi\xe7o S3."]}),"\n",(0,a.jsx)(s.p,{children:"Alguns exemplos de artifacts s\xe3o:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"Source code"}),"\n",(0,a.jsx)(s.li,{children:"Dependencies"}),"\n",(0,a.jsx)(s.li,{children:"Definition files"}),"\n",(0,a.jsx)(s.li,{children:"Templates"}),"\n",(0,a.jsx)(s.li,{children:"Built applications and packages"}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Al\xe9m disto, \xe9 essencial que o bucket esteja na mesma regi\xe3o e conta da pipeline, caso n\xe3o exista, o Code Pipeline criar\xe1 automaticamente, sendo que a cada nova cria\xe7\xe3o de pipeline, um bucket poder\xe1 ser criado para este fim caso n\xe3o encontre um existente com um padr\xe3o de nomes pr\xe9-definidos, a saber: ",(0,a.jsx)(s.code,{children:"code-pipeline-<region>-"}),", assim, caso um bucket com esse padr\xe3o de nomenclatura seja encontrado, este ser\xe1 utilizado em vez de criado um novo. Ressaltando que Cross-region pipelines ter\xe3o este mesmo comportamento."]}),"\n",(0,a.jsx)(s.p,{children:"Ainda sobre a escolha autom\xe1tica do bucket baseda no padr\xe3o de nomenclatura, se houver mais de um bucket com nome de mesmo padr\xe3o, o Code Pipeline escolher\xe1 automaticamente o primeiro encontrado, ordenado lexicograficamente, ou seja, por ordem alfab\xe9tica."}),"\n",(0,a.jsx)(s.p,{children:"Tamb\xe9m \xe9 poss\xedvel definir via CLI, ou IaC (ex. Terraform) o nome do bucket que ser\xe1 utilizado para fazer o armazenamento de Artifacts, sendo poss\xedvel tamb\xe9m definir a forma de encripta\xe7\xe3o dos objetos."}),"\n",(0,a.jsx)(s.h2,{id:"triggers",children:"Triggers"}),"\n",(0,a.jsx)(s.p,{children:"S\xe3o gatilhos que s\xe3o utilizados para dispararem uma pipeline, por exemplo, quando um evento Clouwatch est\xe1 associado ao ARN de uma Pipeline, como event target rule, uma source code revision ir\xe1 representar \xe0s mudan\xe7as relacionadas \xe0quele evento e iniciar\xe1 a pipeline."}),"\n",(0,a.jsx)(s.p,{children:"Os gatilhos de execu\xe7\xe3o podem ser:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"Manual, via console ou CLI, por exemplo"}),"\n",(0,a.jsx)(s.li,{children:"CloudWatch events, sendo que o ARN da pipeline ser\xe1 o target de uma event rule"}),"\n",(0,a.jsx)(s.li,{children:"Webhooks do GIT, na vers\xe3o 2 (V2), para que servi\xe7os terceiros como Github ou Gitlab possam diparar pipelines"}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"variables",children:"Variables"}),"\n",(0,a.jsx)(s.p,{children:"As vari\xe1veis s\xe3o muito \xfateis para deixar as pipelines mais din\xe2micas, por exemplo, \xe9 poss\xedvel definir par\xe2metros diferenciados por ambiente (produ\xe7\xe3o, homologa\xe7\xe3o)."}),"\n",(0,a.jsx)(s.p,{children:"As vari\xe1veis podem ser declaradas diretamente no n\xedvel de pipeline ou emitidas pelas actions. Sendo que as vari\xe1veis emitidas por actions s\xe3o disponibilizadas logo ap\xf3s a execu\xe7\xe3o com sucesso das mesmas."}),"\n",(0,a.jsx)(s.h3,{id:"namespaces",children:"Namespaces"}),"\n",(0,a.jsx)(s.p,{children:"As vari\xe1veis podem pertencer a escopos espec\xedficos, garantindo que elas ser\xe3o unicamente referenciadas. Os namespaces s\xe3o dos seguintes tipos:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"codepipeline"})," , ex.:",(0,a.jsx)(s.code,{children:"#{codepipeline.PipelineExecutionId}"}),". Neste caso s\xe3o vari\xe1veis impl\xedcitas (reservadas) da pipeline em si, dispon\xedveis no in\xedcio de cada execution."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"variables"}),", ex.: ",(0,a.jsx)(s.code,{children:"#{variables.variable_name}"}),". Neste caso s\xe3o vari\xe1veis que ficam no escopo da pipeline"]}),"\n",(0,a.jsxs)(s.li,{children:["Ex.: ",(0,a.jsx)(s.code,{children:"#{SourceVariables.VersionId}"}),". Neste caso s\xe3o vari\xe1veis definidas e produzidas na execu\xe7\xe3o das actions, um namespace precisa ser definido neste escopo e n\xe3o pode conflitar com outras vari\xe1veis da pipeline, aqui foi definido um namespace para a action referente ao CodeCommit que utiliza o namespace ",(0,a.jsx)(s.code,{children:"SourceVariables"}),". Outro exemplo seria o CodeBuild que utiliza o namespace ",(0,a.jsx)(s.code,{children:"BuildVariables"})," para produzir output variables\r\n## Servi\xe7os que podem ser integrados"]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"Durante a execu\xe7\xe3o da pipeline \xe9 poss\xedvel integrar-se a certos servi\xe7os da AWS, sendo poss\xedvel tamb\xe9m integr\xe1-la a servi\xe7os terceiros, como por exemplo:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"Fontes de origem: Github, Gitlab, AWS Code Commit, Amazon S3, Outros servi\xe7os GIt via Webhooks V2"}),"\n",(0,a.jsx)(s.li,{children:"Compila\xe7\xe3o e constru\xe7\xe3o de pacotes: AWS Code Build e Jenkins"}),"\n",(0,a.jsx)(s.li,{children:"Publica\xe7\xe3o: AWS Code Deploy"}),"\n",(0,a.jsx)(s.li,{children:"Notifica\xe7\xf5es e eventos: AWS CloudWatch, AWS Event Bridge, Amazon SNS"}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"boas-pr\xe1ticas-e-exemplo",children:"Boas pr\xe1ticas e exemplo"}),"\n",(0,a.jsxs)(s.p,{children:["Ao estruturar uma pipeline \xe9 recomend\xe1vel agrupar actions de uma revision em um mesmo Stage, desde que haja uma rela\xe7\xe3o entre elas. Por exemplo, no processo de build as actions de ",(0,a.jsx)(s.code,{children:"build"})," e ",(0,a.jsx)(s.code,{children:"test"})," devem estar agrupados em um mesmo stage, para que os testes sejam executados relativos \xe0quela revision."]}),"\n",(0,a.jsxs)(s.p,{children:["Ent\xe3o, seguindo as recomenda\xe7\xf5es da documenta\xe7\xe3o oficial, um modelo b\xe1sico de pipeline seria o seguinte:\r\n",(0,a.jsx)(s.img,{alt:"100%",src:o(1141).A+"",title:"wikilink",width:"1402",height:"674"})]}),"\n",(0,a.jsx)(s.h2,{id:"vers\xf5es-de-pipeline",children:"Vers\xf5es de pipeline"}),"\n",(0,a.jsx)(s.p,{children:"O Code Pipeline possui 2 vers\xf5es de pipeline, V1 e V2, sendo que \xe9 prefer\xedvel utilizar a V2, pois expande quantidade de funcionalidades em rela\xe7\xe3o \xe0 V1, al\xe9m de ter um custo menor. Para ambas vers\xf5es a estrutra \xe9 no formato JSON, contendo Stages e Actions parametrizadas."}),"\n",(0,a.jsx)(s.p,{children:"Na vers\xe3o 2, temos as seguintes funcionalidades a mais:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"Menor custo"}),"\n",(0,a.jsx)(s.li,{children:"Vari\xe1veis a n\xedvel de Pipeline"}),"\n",(0,a.jsxs)(s.li,{children:["Modos de execu\xe7\xe3o ",(0,a.jsx)(s.code,{children:"QUEUED"})," e ",(0,a.jsx)(s.code,{children:"PARALLEL"})]}),"\n",(0,a.jsx)(s.li,{children:"Possibilidade de fazer rollback em n\xedvel de Stage"}),"\n",(0,a.jsx)(s.li,{children:"Sobrescrita de Source Revision"}),"\n",(0,a.jsx)(s.li,{children:"Triggers, filtragens por: tags, GIT Pull Requests, GIT branches ou Path"}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"como-\xe9-a-aprova\xe7\xe3o-manual",children:"Como \xe9 a aprova\xe7\xe3o manual?"}),"\n",(0,a.jsxs)(s.p,{children:["A aprova\xe7\xe3o manual nada menos \xe9 que uma Action do tipo (categoria) ",(0,a.jsx)(s.code,{children:"Approval"}),". Conforme estrutura JSON abaixo:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\r\n  "name": "MyApprovalStage",\r\n  "actions": [\r\n    {\r\n      "name": "MyApprovalAction",\r\n      "actionTypeId": {\r\n        "category": "Approval",\r\n        "owner": "AWS",\r\n        "version": "1",\r\n        "provider": "Manual"\r\n      },\r\n      "inputArtifacts": [],\r\n      "outputArtifacts": [],\r\n      "configuration": {\r\n        "NotificationArn": "arn:aws:sns:us-east-2:80398EXAMPLE:MyApprovalTopic",\r\n        "ExternalEntityLink": "http://example.com",\r\n        "CustomData": "The latest changes include feedback from Bob."\r\n      },\r\n      "runOrder": 1\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,a.jsx)(s.p,{children:"Com base na configura\xe7\xe3o acima percebemos os seguintes detalhes:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["O par\xe2metro ",(0,a.jsx)(s.code,{children:"runOrder"})," define a sequ\xeancia de execu\xe7\xe3o das actions de um Stage"]}),"\n",(0,a.jsx)(s.li,{children:"Existe um t\xf3pico SNS associado \xe0s notifica\xe7\xf5es para os respons\xe1veis (subscribers) pela aprova\xe7\xe3o da pipeline"}),"\n",(0,a.jsx)(s.li,{children:"Uma URL de revis\xe3o pode ser acrescentada, caso o aprovador queira visualizar a aplica\xe7\xe3o no ambiente de QA"}),"\n",(0,a.jsx)(s.li,{children:"\xc9 preciso que haja permiss\xf5es para que a Code Pipeline grave no t\xf3pico em quest\xe3o"}),"\n",(0,a.jsx)(s.li,{children:"\xc9 preciso que o aprovador tenha permiss\xe3o para visualizar e realizar a aprova\xe7\xe3o"}),"\n",(0,a.jsxs)(s.li,{children:["Enquanto a aprova\xe7\xe3o n\xe3o ocorre, a pipeline execution n\xe3o prossegue para os pr\xf3ximos passos, al\xe9m disto a Action permanece no status ",(0,a.jsx)(s.code,{children:"Waiting for approval"})]}),"\n",(0,a.jsxs)(s.li,{children:["Caso n\xe3o haja aprova\xe7\xe3o dentro de 7 dias, a pipeline transita para o status ",(0,a.jsx)(s.code,{children:"Failed"})]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Abaixo segue um exemplo de tela de aprova\xe7\xe3o via console:\r\n",(0,a.jsx)(s.img,{alt:"300",src:o(1321).A+"",title:"wikilink",width:"602",height:"740"})]}),"\n",(0,a.jsxs)(s.p,{children:["Caso a aprova\xe7\xe3o seja pelo CLI, um arquivo de JSON de aprova\xe7\xe3o",(0,a.jsx)(s.sup,{children:(0,a.jsx)(s.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," deve ser enviado, conforme exemplo abaixo;"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\r\n  "pipelineName": "MyFirstPipeline",\r\n  "stageName": "MyApprovalStage",\r\n  "actionName": "MyApprovalAction",\r\n  "token": "1a2b3c4d-573f-4ea7-a67E-XAMPLETOKEN",\r\n  "result": {\r\n    "status": "Approved",\r\n    "summary": "The new design looks good. Ready to release to customers."\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(s.h2,{id:"monitoramento",children:"Monitoramento"}),"\n",(0,a.jsx)(s.p,{children:"Do ponto de vista de observabilidade, o Code Pipeline pode ser monitorado pelos seguintes meios:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:'Via [Amazon Event Bridge](Amazon Event Bridge "wikilink")'}),"\n",(0,a.jsx)(s.li,{children:"AWS Developer Tools console"}),"\n",(0,a.jsx)(s.li,{children:"AWS Cloudtrail"}),"\n",(0,a.jsx)(s.li,{children:"Console e CLI"}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"event-bridge",children:"Event Bridge"}),"\n",(0,a.jsx)(s.p,{children:"O monitoramento pelo Event Bridge utiliza o mesmo mecanismo que o Cloudwatch na camada inferior de servi\xe7os da AWS, por\xe9m possui uma gama maior de funcionalidades do ponto de vista de orquestra\xe7\xe3o de eventos."}),"\n",(0,a.jsx)(s.p,{children:"Assim, para o monitoramento das pipelines os eventos capturados ser\xe3o os referentes \xe0 mudan\xe7a de estado nos componentes a saber:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Pipelines"}),"\n",(0,a.jsx)(s.li,{children:"Stages"}),"\n",(0,a.jsx)(s.li,{children:"Actions"}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"Quando um evento for capturado, ele ser\xe1 enviado para targets espec\xedficos, podendo ser:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Lambda Function"}),"\n",(0,a.jsx)(s.li,{children:"AWS SNS"}),"\n",(0,a.jsx)(s.li,{children:"Outros servi\xe7os compat\xedveis com Event Bridge"}),"\n"]}),"\n",(0,a.jsx)(s.h4,{id:"mas-o-que-s\xe3o-eventos",children:"Mas o que s\xe3o Eventos?"}),"\n",(0,a.jsx)(s.p,{children:"Do ponto de vista do Code Pipeline, s\xe3o um conjunto de rules (regras) referentes \xe0s mudan\xe7as de estado da pipeline. Diante disto, podemos fazer a seguinte rela\xe7\xe3o:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Eventos s\xe3o um conjunto de ",(0,a.jsx)(s.code,{children:"Rules"})]}),"\n",(0,a.jsx)(s.li,{children:"As Rules s\xe3o compostas de:"}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"Event pattern"}),", representando o Source e o Type dos eventos a monitorar. De modo que, o Code Pipeline seria o Source, enquanto o Type representa o tipo de mudan\xe7a que deve ser capturado (Stage, Action, Pipeline)"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"Target"}),", representa o canal de notifica\xe7\xe3o, que pode, por exemplo um t\xf3pico do AWS SNS. Al\xe9m disto, a notifica\xe7\xe3o \xe9 realizada com sucesso mediante a permiss\xe3o de ",(0,a.jsx)(s.code,{children:"Invoke"})," no servi\xe7o destino"]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"Recaptulando, os eventos s\xe3o disparados na mudan\xe7a de estados de um dos seguintes tipos (Types):"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Pipeline Executions ",(0,a.jsx)(s.sup,{children:(0,a.jsx)(s.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})})]}),"\n",(0,a.jsxs)(s.li,{children:["Stage Executions",(0,a.jsx)(s.sup,{children:(0,a.jsx)(s.a,{href:"#user-content-fn-3",id:"user-content-fnref-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})}),(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html#detect-state-events-stage",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html#detect-state-events-stage"})]}),"\n",(0,a.jsxs)(s.li,{children:["Action Executions ",(0,a.jsx)(s.sup,{children:(0,a.jsx)(s.a,{href:"#user-content-fn-4",id:"user-content-fnref-4","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"4"})})]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"Sendo que cada um destes tipos possui seu conjunto de estados que podem ser monitorados."}),"\n",(0,a.jsx)(s.h3,{id:"detail-type",children:"Detail type"}),"\n",(0,a.jsx)(s.p,{children:"\xc9 o atributo que define quais tipos de mudan\xe7a de estados ser\xe3o monitoradas, sendo que para cada um deles \xe9 poss\xedvel monitorar somente em pipelines espec\xedficas ou em todas."}),"\n",(0,a.jsx)(s.p,{children:"Abaixo segue um exemplo da configura\xe7\xe3o JSON referente a um determinado evento de mudan\xe7a de estado de uma Stage Execution:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\r\n  "version": "0",\r\n  "id": "01234567-EXAMPLE",\r\n  "detail-type": "CodePipeline Stage Execution State Change",\r\n  "source": "aws.codepipeline",\r\n  "account": 123456789012,\r\n  "time": "2020-01-24T22:03:07Z",\r\n  "region": "us-east-1",\r\n  "resources": [\r\n    "arn:aws:codepipeline:us-east-1:123456789012:myPipeline"\r\n  ],\r\n  "detail": {\r\n    "pipeline": "myPipeline",\r\n    "version": 1.0,\r\n    "execution-id": "12345678-1234-5678-abcd-12345678abcd",\r\n    "start-time": "2023-10-26T13:49:39.208Z",\r\n    "stage": "Prod",\r\n    "state": "STARTED",\r\n    "pipeline-execution-attempt": 1.0\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(s.h3,{id:"developer-tools",children:"Developer Tools"}),"\n",(0,a.jsxs)(s.p,{children:["O Developer Tools Console ",(0,a.jsx)(s.sup,{children:(0,a.jsx)(s.a,{href:"#user-content-fn-5",id:"user-content-fnref-5","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"5"})})," \xc9 um conjunto de servi\xe7os da AWS para auxiliar no desenvolvimento."]}),"\n",(0,a.jsx)(s.p,{children:"O monitoramento pelo Developer Tools ocorre por meio de subscri\xe7\xe3o no t\xf3pico SNS referente aos eventos emitidos pelas pipelines."}),"\n",(0,a.jsx)(s.h3,{id:"cloudtrail",children:"Cloudtrail"}),"\n",(0,a.jsxs)(s.p,{children:["O Servi\xe7o AWS CloudTrail pode ser utilizado para realizar o monitoramento, por\xe9m \xe9 necess\xe1rio que haja um bucket \xe9 requerido para que os logs sejam armazenados (despejados). Caso n\xe3o haja o bucket, ser\xe1 utilizado um ",(0,a.jsx)(s.code,{children:"placeholder bucket"})," para despejo dos logs."]}),"\n",(0,a.jsx)(s.p,{children:"Se a estrat\xe9gia do placeholder bucket for utilizada, n\xe3o ser\xe1 poss\xedvel acessar dados dos logs, somente se for definido um bucket personalizado para despejo dos logs."}),"\n",(0,a.jsx)(s.h2,{id:"references",children:"References"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"Code Pipeline - Vis\xe3o Geral - Literature notes (personal Obsidian vault)"}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/action-types.html",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/action-types.html"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-variables.html#reference-variables-concepts",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-variables.html#reference-variables-concepts"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts-how-it-works.html",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts-how-it-works.html"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/approvals-json-format.html",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/approvals-json-format.html"})}),"\n"]}),"\n","\n",(0,a.jsxs)(s.section,{"data-footnotes":!0,className:"footnotes",children:[(0,a.jsx)(s.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{id:"user-content-fn-1",children:["\n",(0,a.jsxs)(s.p,{children:["JSON Structure for manual approval: ",(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/usergu2de/approvals-json-format.html",children:"https://docs.aws.amazon.com/codepipeline/latest/usergu2de/approvals-json-format.html"})," ",(0,a.jsx)(s.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{id:"user-content-fn-2",children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html#detect-state-events-pipeline",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html#detect-state-events-pipeline"})," ",(0,a.jsx)(s.a,{href:"#user-content-fnref-2","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{id:"user-content-fn-3",children:["\n",(0,a.jsx)(s.a,{href:"#user-content-fnref-3","data-footnote-backref":"","aria-label":"Back to reference 3",className:"data-footnote-backref",children:"\u21a9"}),"\n"]}),"\n",(0,a.jsxs)(s.li,{id:"user-content-fn-4",children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html#detect-state-events-action",children:"https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html#detect-state-events-action"})," ",(0,a.jsx)(s.a,{href:"#user-content-fnref-4","data-footnote-backref":"","aria-label":"Back to reference 4",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{id:"user-content-fn-5",children:["\n",(0,a.jsxs)(s.p,{children:["Developer tools console: ",(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/pt_br/dtconsole/latest/userguide/what-is-dtconsole.html",children:"https://docs.aws.amazon.com/pt_br/dtconsole/latest/userguide/what-is-dtconsole.html"})," ",(0,a.jsx)(s.a,{href:"#user-content-fnref-5","data-footnote-backref":"","aria-label":"Back to reference 5",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1321:(e,s,o)=>{o.d(s,{A:()=>a});const a=o.p+"assets/images/3f18c917ec72bc0d90440f8d80fa34afa85840b6-4a41d385e94cd6ce4799a165858e271f.png"},1141:(e,s,o)=>{o.d(s,{A:()=>a});const a=o.p+"assets/images/CodePipelineExample.excalidraw-6d77e0f9889693d91130a3a98683fecb.svg"},8453:(e,s,o)=>{o.d(s,{R:()=>r,x:()=>d});var a=o(6540);const n={},i=a.createContext(n);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);