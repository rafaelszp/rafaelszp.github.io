"use strict";(self.webpackChunkrafaelszp_github_io=self.webpackChunkrafaelszp_github_io||[]).push([[866],{4220:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var o=t(4848),i=t(8453);const l={title:"Focus mode on linux with 'at' and 'dunst'",date:"2023-03-14",categories:["arch-linux","linux"]},s=void 0,r={permalink:"/blog/2023/03/14/2023/03/focus-mode-on-linux-with-at-and-dunst",editUrl:"https://github.com/rafaelszp/rafaelszp.github.io/tree/master/blog/blog/2023/03/2023-03-14-focus-mode-on-linux-with-at-and-dunst/index.md",source:"@site/blog/2023/03/2023-03-14-focus-mode-on-linux-with-at-and-dunst/index.md",title:"Focus mode on linux with 'at' and 'dunst'",description:"Create this shell script on you ~/.local/bin/focusmode path with the following content:",date:"2023-03-14T00:00:00.000Z",tags:[],readingTime:.735,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Focus mode on linux with 'at' and 'dunst'",date:"2023-03-14",categories:["arch-linux","linux"]},unlisted:!1,prevItem:{title:"Computing X-Forwarded-For header in nginx-controller",permalink:"/blog/2023/03/29/2023/03/computing-x-forwarded-for-header-in-nginx-controller"},nextItem:{title:"crictl cheatsheet for k0s",permalink:"/blog/2023/03/07/2023/03/crictl-cheatsheet-for-k0s"}},c={authorsImageUrls:[]},a=[];function d(e){const n={a:"a",code:"code",em:"em",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Create this shell script on you ~/.local/bin/focusmode path with the following content:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'#!/bin/sh\n\nSIGNAL=$1\n\nif [ -z $SIGNAL ]; then\n  echo "Signal must be provided: on|off"\n  exit -127\nfi\n\nif [ $SIGNAL == "on" ]; then\n  atrm $(atq -qf | cut -f1) 2> /dev/null || echo $status\n  notify-send --urgency=low --expire-time=1000 --category=FOCUS "Focus mode on" "Focus mode Started"\n  sleep 1\n  killall -SIGUSR1 dunst \n  echo "killall -SIGUSR2 dunst" | at -q f now +50 minutes\nelse \n  killall -SIGUSR2 dunst\n  atrm $(atq -qf | cut -f1) 2>/dev/null || echo $status\n  notify-send --urgency=low --expire-time=3000 --category=FOCUS "Focus mode off" "Focus mode ended"\nfi\natq\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Then run ",(0,o.jsx)(n.code,{children:"chmod +x ~/.local/bin/focusmode"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Usage"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"focusmode on"})," - Will disable dunst for 50 minutes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"focusmode off"})," - Will enable dunst"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Requirements"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"at"})," package properly installed"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"atd"})," daemon enabled and running"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"dunst"})," acting as your notification daemon"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"See also:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://wiki.archlinux.org/title/Dunst#Disable%5C_dunst%5C_temporarily",children:"https://wiki.archlinux.org/title/Dunst#Disable\\_dunst\\_temporarily"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var o=t(6540);const i={},l=o.createContext(i);function s(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);