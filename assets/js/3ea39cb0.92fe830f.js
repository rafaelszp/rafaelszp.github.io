"use strict";(self.webpackChunkrafaelszp_github_io=self.webpackChunkrafaelszp_github_io||[]).push([[5589],{875:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(4848),o=t(8453);const i={title:"Computing X-Forwarded-For header in nginx-controller",date:"2023-03-29",categories:["kubernetes"]},a=void 0,l={permalink:"/blog/2023/03/29/2023/03/computing-x-forwarded-for-header-in-nginx-controller",editUrl:"https://github.com/rafaelszp/rafaelszp.github.io/tree/master/blog/blog/2023/03/2023-03-29-computing-x-forwarded-for-header-in-nginx-controller/index.md",source:"@site/blog/2023/03/2023-03-29-computing-x-forwarded-for-header-in-nginx-controller/index.md",title:"Computing X-Forwarded-For header in nginx-controller",description:"Step 1 (optional)",date:"2023-03-29T00:00:00.000Z",tags:[],readingTime:.84,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Computing X-Forwarded-For header in nginx-controller",date:"2023-03-29",categories:["kubernetes"]},unlisted:!1,prevItem:{title:"Avoiding memory allocation table errors with Buildkit (docker)",permalink:"/blog/2023/03/30/2023/03/avoiding-memory-allocation-table-errors-with-buildkit-docker"},nextItem:{title:"Focus mode on linux with 'at' and 'dunst'",permalink:"/blog/2023/03/14/2023/03/focus-mode-on-linux-with-at-and-dunst"}},s={authorsImageUrls:[]},c=[{value:"Step 1 (optional)",id:"step-1-optional",level:4},{value:"Step 2",id:"step-2",level:4}];function d(e){const n={code:"code",em:"em",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h4,{id:"step-1-optional",children:"Step 1 (optional)"}),"\n",(0,r.jsx)(n.p,{children:"Edit ingress-nginx-controller service:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl edit -n ingress-nginx svc/ingress-nginx-controller\n"})}),"\n",(0,r.jsx)(n.p,{children:"Change the following spec as below and save the service config:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"spec: \n   externalTrafficPolicy: Local\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"externalTrafficPolicy: Local"}),": ",(0,r.jsx)(n.em,{children:'If set to "Local", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.)'})]}),"\n",(0,r.jsx)(n.p,{children:"E.g.: With this configuration, you will need to take care of the balancing properly. This step may be skipped, so you'd rather try the next step before changing this configuration."}),"\n",(0,r.jsx)(n.h4,{id:"step-2",children:"Step 2"}),"\n",(0,r.jsx)(n.p,{children:"Edit the ingress-nginx-controller data with the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl edit -n ingress-nginx cm/ingress-nginx-controller\n"})}),"\n",(0,r.jsx)(n.p,{children:"The data section must be edited like the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'data:\n  compute-full-forwarded-for: "false"\n  use-forwarded-headers: "true"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Save the config map and restart the deployment/daemonset regarding ingress-nginx"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const o={},i=r.createContext(o);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);